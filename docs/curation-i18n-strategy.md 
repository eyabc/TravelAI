

# 🌍 Curation 다국어 처리 전략 (i18n Strategy)

본 문서는 TravelAI의 여행 큐레이션 기능에서 사용자 입력과 응답을 다양한 언어로 지원하기 위한 다국어 처리 흐름을 정의합니다.

---

## 🎯 목표

- 사용자 입력 언어에 관계없이 **영어 기준 규칙을 일관되게 적용**
- 규칙 기반 GPT 프롬프트 시스템을 다국어로 통합 관리
- 사용자 언어로 최종 결과 제공 (UX 일관성 유지)

---

## 🔁 전체 처리 플로우

```
사용자 입력 (예: 한국어)
          ⬇
입력을 영어로 번역 (TranslationService)
          ⬇
영어 입력으로 규칙 매칭 (CurationPromptLoader)
          ⬇
GPT 프롬프트 구성 및 응답 생성 (영어)
          ⬇
영어 응답을 다시 사용자 언어로 번역
          ⬇
사용자에게 번역된 큐레이션 결과 출력
```

---

## ⚙️ 컴포넌트 흐름

| 단계 | 서비스 | 설명 |
|------|--------|------|
| 1 | TranslationService | 입력 언어 → 영어로 번역 |
| 2 | CurationPromptLoader | 영어 기준 YAML 규칙과 매칭 |
| 3 | CurationEngineService | GPT system/user 프롬프트 구성 |
| 4 | GptService | 영어 응답 생성 |
| 5 | TranslationService | 응답 → 사용자 언어로 번역 |
| 6 | Response | 최종 번역된 결과 사용자에게 전달 |

---

## 🧠 설계 원칙

- **규칙 매칭 기준 언어를 영어로 고정**하여 다국어 혼선을 방지
- 다국어 입력 정규화 및 캐시 통일을 위해 입력 텍스트는 영어 번역 이후 처리
- 입력/출력 모두 `TranslationService`를 통해 중단점 없이 흐름 구성

---

## 📦 예시

사용자 입력:
```
혼자 여행이에요
```

변환 흐름:

- 입력 → 번역: `"I'm traveling alone"`
- 매칭된 규칙: `"I'm traveling alone"` → GPT system prompt
- GPT 응답 (영어): `"You should visit quiet and safe areas like ..." `
- 최종 번역 → 사용자 언어 출력: `"혼자서도 안전하고 조용한 장소를 추천합니다..."`

---

## ✅ 장점

- 규칙 관리 및 프롬프트 설계가 영어로 통일 → **유지보수 용이**
- 번역 정확도 개선 → **AI 응답 일관성 강화**
- 추후 어드민에서 규칙 추가 시 언어 문제 최소화

---

## 🔮 향후 확장 고려

- 입력 언어 자동 감지 → TranslationService에서 언어코드 유지
- 영어 외 다른 기준 언어(B) 지원 (ex: 일본어 중심 앱의 경우)
- 번역 캐시 이중 저장: 입력 원문 + 영어 변환 쌍
